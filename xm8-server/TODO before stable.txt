TODO før "stabilt"

TODO:
- Kalkulere interval/antall steps for inputs også for view, nå virker bare options
- Range-sjekking på midi options, må være 0-127 eller 0-14bit
- Cancel i link-dialog fungerer ikke
- Standardisere NodeTypes som andre enums

- Teste displayoptions, kalle det noe annet?

- Fikse subscribe i patchRepo
- Serialisering
    - sende virtual controllers
- Ta vare på virtual input ordering i state for å kunne sende virtual controllers
    - Legge til input array position på input config og serialisere denne

- Scrollbars i matrix
- Bedre ikoner for reset og delete, bedre skille i meny
- Reset patch virket ikke på inputs og matrix
- rename physicalInputs til panelInputs?
- teste outputs-reducer
- Trekk ut inputstepsgeneration-konstanter i egen fil

Småting


- Luft etter hver gruppe i meny
- midi status/cc as constants


For later:
- Faner med matrix/graph/inputs/groups under patch
    - Må lage noe som husker hvilken som vises slik at når man klikker patches i hovedmeny så kommer man til sist valgte underkat.
- Make preparers work on immutable objects?
- Consider having only one type of inputs and let all inputs be per-patch configurable. Makes things much easier to understand and
  means we do not have to handle midi specially for virtual controllers etc.

- We will get collisions if two inputs (physical or virtual, it doesn't matter) map to the same midi controller but use
  different options. This double mapping also means we have to 'search' for any inputs that matches the midi message combination,
  which may be time consuming. Perhaps we should make it impossible to map multiple inputs to the same midi controller - if you
  want one parameter to control multiple things it must be the same input?
- Extend steps mode from being a virtual controller/gui thing into affecting midi/hardware controllers as well (steps etc).
- Fjerne groups fra inputs (physical), bruke inputgroups isteden?
- React recompose
- Sticky row for patch-icons
    - Se etter alternativ, StickyDiv fungerer ikke når scroll er nedover siden (altså ved routing). Burde kanskje uansett scrolle eller
      ta vare på scrollpos på den siden man er:
        - https://github.com/reactjs/react-router/blob/73e6c85f427c48f90bae0bb0e9745b6b48536e2f/CHANGES.md#scrolling
    - background color
- "LEDS" for patch saved and autosaved.
- Only enable save patch if patch has changed
- Split frontend state into patchNumbers (patch and controllers) - need to have separate selected states and only reset
  the affected ones for the patchNumber that has been changed
- Reset for controllers, reset to patch default.
- Split controllers into one-per-patch
- Split frontend state and backend-state-in-frontend to make state updating simpler (consider Sigurds suggestion
  of reusing the backend reducer and only send actions.
    - Requires any additional data from backend to be appended to actions when they arrive on the server instead
      of performing calls in the reducers
    - Must consider if this has any adverse effect on undo buffers since they are not in state and will not have all
      data in a frontend instance.
- Disable undo button when no previous/next
- Do change detection in middleware
- Retain frontend state on reload
- Generalisere sletting fra consumers, det er et rakleverk nå.
- Flatten node reducer, den er helt uoversiktlig.
- Mulig å dra controllersidefaner dit man vil for raskere tilgang (må persisteres)
- Predefinerte ikoner for physical groups
- Use Reselect - https://github.com/reactjs/reselect
- Fjerne groups fra inputs (er de i bruk)?
- move all things ajax to repositories?
- ids should be unique across synths and memorycards, so we may have to use some sort of uuid scheme instead of a running number. 
- Kanskje selectedInput også bør være en del av undo-løypa, nå er det forvirrende når man går til undo på forrige input.
- bytte til getNextUniqueId for noder også, og automatisk velg nyeste node. Fjern navn og nextAvailableId
- Flytte display options fra input til visning i input group?
- Vise editerte kontrollflater under control (ikke et MÅ-krav i denne omgang)